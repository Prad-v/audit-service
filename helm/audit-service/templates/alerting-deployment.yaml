{{- if .Values.alerting.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "audit-service.fullname" . }}-alerting
  namespace: {{ include "audit-service.namespace" . }}
  labels:
    {{- include "audit-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: alerting
spec:
  replicas: {{ .Values.alerting.replicas }}
  selector:
    matchLabels:
      {{- include "audit-service.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: alerting
  strategy:
    {{- toYaml .Values.alerting.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "audit-service.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: alerting
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "audit-service.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: alerting
        image: "{{ .Values.alerting.image.repository }}:{{ .Values.alerting.image.tag }}"
        imagePullPolicy: {{ .Values.alerting.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.alerting.ports.http }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.alerting.ports.metrics }}
          protocol: TCP
        env:
        {{- range $key, $value := .Values.alerting.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          {{- toYaml .Values.alerting.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: varlog
          mountPath: /var/log
      volumes:
      - name: tmp
        emptyDir: {}
      - name: varlog
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
